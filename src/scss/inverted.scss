@import "../../node_modules/bootstrap/scss/functions";
@import "./variables";
@import "../../node_modules/bootstrap/scss/variables";

.inverted {
  color: $white;

  // Checkboxes
  &.form-check {
    color: $white;
  }

  .form-check-input {
    background-color: transparent;
    border-color: $primary-light;
    color: $primary;
  }

  .form-check-input:checked {
    background-color: $white;
    border-color: $white;
    color: $primary;
  }

  .form-check-input:checked[type="checkbox"] {
    background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20'%3e%3cpath fill='none' stroke='%23405c94' stroke-linecap='round' stroke-linejoin='round' stroke-width='3' d='M6 10l3 3l6-6'/%3e%3c/svg%3e");
  }

  .form-check-input:checked[type="radio"] {
    background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20'%3e%3cpath fill='none' stroke='%23405c94' stroke-linecap='round' stroke-linejoin='round' stroke-width='3' d='M6 10l3 3l6-6'/%3e%3c/svg%3e");
  }

  // Label
  .form-label {
    margin-bottom: map-get($spacers, 2);
    color: $primary-light;
  }

  .vector-border-right {
    border-right: 1px !important;
    border-color: white !important;
  }

  // Input Group
  .input-group {
    margin-bottom: map-get($spacers, 5);

    > .form-control,
    > .form-select {
      color: $white;
      background-color: transparent;
      border: 0;
      border-bottom: 1px solid $primary-tint;

      &::-webkit-outer-spin-button,
      &::-webkit-inner-spin-button {
        -webkit-appearance: none;
        margin: 0;
      }

      &[type=number] {
        -moz-appearance: textfield;
      }
    }

    //> .form-control:focus,
    //> .form-select:focus {}

    //.btn {
    //  &:focus {}
    //}
  }

  .input-group-text {
    color: $input-group-addon-color;
    background-color: $input-group-addon-bg;
  }

  //.input-group-lg > .form-control,
  //.input-group-lg > .form-select,
  //.input-group-lg > .input-group-text,
  //.input-group-lg > .btn {
  //}
  //
  //.input-group-sm > .form-control,
  //.input-group-sm > .form-select,
  //.input-group-sm > .input-group-text,
  //.input-group-sm > .btn {
  //}
  //
  //.input-group-lg > .form-select,
  //.input-group-sm > .form-select {
  //}

  .input-group {
    //&:not(.has-validation) {
    //  > :not(:last-child):not(.dropdown-toggle):not(.dropdown-menu),
    //  > .dropdown-toggle:nth-last-child(n + 3) {
    //  }
    //}

    //&.has-validation {
    //  > :nth-last-child(n + 3):not(.dropdown-toggle):not(.dropdown-menu),
    //  > .dropdown-toggle:nth-last-child(n + 4) {
    //  }
    //}

    //$validation-messages: "";
    //@each $state in map-keys($form-validation-states) {
    //  $validation-messages: $validation-messages + ":not(." + unquote($state) + "-tooltip)" + ":not(." + unquote($state) + "-feedback)";
    //}

    //> :not(:first-child):not(.dropdown-menu)#{$validation-messages} {
    //}
  }

  // Form Select
  .form-select {
    color: $white;
    background-color: transparent;
    background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3e%3cpath fill='none' stroke='%23fff' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M2 5l6 6 6-6'/%3e%3c/svg%3e");

    &:focus {
      border-color: $form-select-focus-border-color;
      @if $enable-shadows {
        @include box-shadow($form-select-box-shadow, $form-select-focus-box-shadow);
      } @else {
        // Avoid using mixin so we can pass custom focus shadow properly
        box-shadow: $form-select-focus-box-shadow;
      }
    }

    &[multiple],
    &[size]:not([size="1"]) {
      background-image: none;
    }

    &:disabled {
      color: $white;
      background-color: $primary-tint;
      border-color: $form-select-disabled-border-color;
    }

    // Remove outline from select box in FF
    &:-moz-focusring {
      color: transparent;
      text-shadow: 0 0 0 $form-select-color;
    }
  }

  //.form-select-sm {}

  //.form-select-lg {}

  // Nav

  .nav-link {
    color: $white;

    &:hover,
    &:focus {
      color: $primary-light;
    }

    &.disabled {
      color: $nav-link-disabled-color;
    }
  }

  .nav-tabs {
    border-bottom: $nav-tabs-border-width solid $primary-shade;

    .nav-link {
      background: $primary-shade;
      border: $nav-tabs-border-width solid transparent;

      &:hover,
      &:focus {
        border-color: $nav-tabs-link-hover-border-color;
      }

      &.disabled {
        color: $nav-link-disabled-color;
        background-color: transparent;
        border-color: transparent;
      }
    }

    .nav-link.active,
    .nav-item.show .nav-link {
      color: $white;
      background-color: $primary-tint;
      border-color: $primary-tint;
    }

    .dropdown-menu {
      margin-top: -$nav-tabs-border-width;
    }
  }

  .nav-pills {
    .nav-link {
      background: none;
      border: 0;
    }

    .nav-link.active,
    .show > .nav-link {
      color: $nav-pills-link-active-color;
      background-color: $primary-tint;
    }
  }

  // Badge
  .badge {
    background-color: $white;
    color: $primary;
    // Empty badges collapse automatically
    &:empty {}

    &.bg-primary {
      background-color: $white !important;
    }
  }

  .btn .badge {}

  // Border
  .border-secondary {
    border-color: $primary-tint !important;
  }

  // Button
  @each $color, $value in $theme-colors-inverted {
    .text-#{$color} {
      color: $value !important;
    }
  }

  // Button
  @each $color, $value in $theme-colors-inverted {
    .btn-#{$color} {
      @include button-variant($value, $value);
    }
  }

  @each $color, $value in $theme-colors-inverted {
    .btn-outline-#{$color} {
      @include button-outline-variant($value);
    }
  }

  @each $color, $value in $theme-colors {
    .bg-inverted-#{$color} {
      background-color: $value !important;
    }
  }

  .inverted-border-0 {
    @extend .border-0
  }
}